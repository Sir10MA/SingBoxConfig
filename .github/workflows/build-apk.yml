# GitHub Actions workflow to build a KivyMD Python app into an Android APK
# Version 3: Uses a dedicated action to pre-install the Android SDK for reliability.

name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Set up Java Development Kit (JDK) 11
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      # 3. Set up Python 3.9
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # 4. [NEW] Set up Android SDK
      # This is the key fix. We pre-install the SDK and build-tools so that
      # executables like 'aidl' are guaranteed to be in the system PATH.
      - name: Set up Android SDK
        uses: android-actions/setup-sdk@v2.2.1
        with:
          # API level of the platform to install
          api-level: 33
          # Version of the build tools to install
          build-tools-version: 33.0.2
          # NDK version to install
          ndk-version: 25.1.8937393

      # 5. Install Python and system dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache autoconf libtool pkg-config
          python -m pip install --upgrade pip
          pip install "cython<3.0"
          pip install buildozer

      # 6. Create the buildozer.spec file
      - name: Create buildozer.spec
        run: |
          cat > buildozer.spec << EOF
          [app]
          title = Sing-box Config Maker
          package.name = singboxconfig
          package.domain = org.example
          source.dir = .
          source.include_exts = py,png,jpg,kv,atlas,json
          version = 0.2
          requirements = python3,kivy,kivymd,requests,pysocks
          orientation = portrait
          icon.filename = %(source.dir)s/icon.png
          
          [buildozer]
          log_level = 2
          warn_on_root = 1
          
          [android]
          fullscreen = 0
          android.permissions = INTERNET, ACCESS_NETWORK_STATE
          
          # We don't need to specify build_tools here anymore
          # because the SDK is pre-installed in the step above.
          android.api = 33
          android.minapi = 21
          android.ndk = 25b # Buildozer uses this to find the pre-installed NDK
          
          android.archs = arm64-v8a, armeabi-v7a
          EOF

      # 7. [NEW] Clean previous buildozer artifacts
      # This ensures a completely fresh build without any cached errors.
      - name: Clean buildozer cache
        run: buildozer appclean

      # 8. Run the Buildozer build command
      - name: Build with Buildozer
        run: buildozer -v android debug

      # 9. Upload the generated APK as a build artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: singbox-config-maker-apk
          path: bin/*.apk
