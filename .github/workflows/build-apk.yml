name: Android APK Build (p4a, universal, cached)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Cache Android SDK/NDK to speed up repeat builds
      - name: Cache Android SDK/NDK
        uses: actions/cache@v4
        with:
          path: |
            ~/android-sdk
          key: android-sdk-${{ runner.os }}-33-25.2.9519653
          restore-keys: |
            android-sdk-${{ runner.os }}

      # Cache pip + p4a artifacts
      - name: Cache pip & p4a
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.local/share/python-for-android
            .p4a
          key: p4a-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            p4a-${{ runner.os }}

      # [FIXED] Install a complete set of build tools, including libtool
      - name: Install system deps (Noble-friendly)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip wget curl build-essential \
            autoconf automake libtool \
            libncurses6 libstdc++6 \
            zlib1g zlib1g-dev \
            libffi-dev libssl-dev \
            libjpeg-dev libfreetype6-dev libsqlite3-dev \
            openjdk-17-jdk

      - name: Install python-for-android
        run: |
          python -m pip install --upgrade pip wheel setuptools
          # Cython helps compile some recipes
          pip install Cython
          pip install python-for-android

      - name: Install Android SDK + NDK (cmdline-tools fixed layout)
        shell: bash
        run: |
          export ANDROID_HOME="$HOME/android-sdk"
          export ANDROID_SDK_ROOT="$ANDROID_HOME"
          mkdir -p "$ANDROID_HOME/cmdline-tools"

          if [ ! -d "$ANDROID_HOME/cmdline-tools/latest" ]; then
            echo "Downloading Android cmdline-tools…"
            wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
            unzip -q cmdline-tools.zip -d "$ANDROID_HOME/cmdline-tools"
            # Zip extracts to cmdline-tools/cmdline-tools/{bin,lib,...}
            mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"
          fi

          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH"
          yes | sdkmanager --sdk_root="$ANDROID_HOME" --licenses || true

          sdkmanager --sdk_root="$ANDROID_HOME" \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "ndk;25.2.9519653"

          # Persist env for next steps
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/build-tools/33.0.2" >> $GITHUB_PATH

      - name: Build universal APK with p4a (no Buildozer)
        shell: bash
        run: |
          source "$GITHUB_ENV"
          # Use p4a’s own recipes to avoid autoreconf/libffi macro issues
          p4a apk \
            --private . \
            --package=org.singbox.generator \
            --name "SingBox Generator" \
            --version 0.1 \
            --bootstrap sdl2 \
            --requirements=python3,kivy==2.2.1,kivymd==1.1.1,requests,pysocks \
            --arch=armeabi-v7a \
            --arch=arm64-v8a \
            --sdk-dir="$ANDROID_SDK_ROOT" \
            --ndk-dir="$ANDROID_NDK_ROOT" \
            --android-api=33 \
            --copy-libs \
            --output singbox-universal.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: SingBoxGenerator-Universal
          path: singbox-universal.apk
