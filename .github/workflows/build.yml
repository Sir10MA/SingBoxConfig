name: Build Android APK

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Python for the spec generator script
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 3. Run our script to generate the buildozer.spec file
      - name: Generate buildozer.spec
        run: python generate_spec.py

      # 4. Use a pre-configured action to build the APK with Buildozer
      - name: Build with Buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        id: buildozer
        with:
          workdir: .
          # This command builds an unsigned release APK
          build_command: buildozer -v android release unsigned

      # 5. Upload the generated APK as a workflow artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-apk
          # Path to the APK file. Buildozer places it in the bin/ directory.
          # The wildcard '*' matches the generated file name.
          path: bin/*.apk
